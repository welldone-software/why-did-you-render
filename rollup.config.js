import resolve from 'rollup-plugin-node-resolve'
import commonjs from '@rollup/plugin-commonjs'
import babel from '@rollup/plugin-babel'
import {terser} from 'rollup-plugin-terser'
import license from 'rollup-plugin-license'

import pkg from './package.json'

const banner = `
<%= pkg.name %> <%= pkg.version %>
MIT Licensed 
Generated by <%= pkg.authors[0] %>
Generated at <%= moment().format('YYYY-MM-DD') %>
`

export default {
  input: 'src/index.js',
  external: [
    'lodash.times',
    'lodash.sortby',
    'lodash.compact',
    'lodash.clonedeep',
    'lodash.defaults',
    'lodash.get',
    'lodash.groupby',
    'lodash.isarray',
    'lodash.isplainobject',
    'lodash.isdate',
    'lodash.isregexp',
    'lodash.isfunction',
    'lodash.isset',
    'lodash.isstring',
    'lodash.keys',
    'lodash.reduce',
    'lodash.has',
  ],
  output: [
    {
      name: 'whyDidYouRender',
      file: pkg.main,
      format: 'umd',
      sourcemap: true,
      exports: 'default',
      globals: {
        'lodash.times':'times',
        'lodash.sortby': 'sortBy',
        'lodash.compact': 'compact',
        'lodash.clonedeep': 'cloneDeep',
        'lodash.defaults': 'defaults',
        'lodash.get': 'get',
        'lodash.groupby': 'groupBy',
        'lodash.isarray': 'isArray',
        'lodash.isplainobject': 'isPlainObject',
        'lodash.isdate': 'isDate',
        'lodash.isregexp': 'isRegexp',
        'lodash.isfunction': 'isFunction',
        'lodash.isset': 'isSet',
        'lodash.isstring': 'isString',
        'lodash.keys': 'keys',
        'lodash.reduce': 'reduce',
        'lodash.has': 'has',
      }
    }
  ],
  plugins: [
    babel({
      exclude: 'node_modules/**',
      babelHelpers: 'bundled'
    }),
    resolve(),
    commonjs(),
    terser(),
    license({
      sourcemap: true,
      banner
    })
  ]
}
